// Generated by cpp11: do not edit by hand
// clang-format off


#include "cpp11/declarations.hpp"
#include <R_ext/Visibility.h>

// dustmpi.cpp
void start_mpi();
extern "C" SEXP _dustmpi_start_mpi() {
  BEGIN_CPP11
    start_mpi();
    return R_NilValue;
  END_CPP11
}
// dustmpi.cpp
int get_mpi_size();
extern "C" SEXP _dustmpi_get_mpi_size() {
  BEGIN_CPP11
    return cpp11::as_sexp(get_mpi_size());
  END_CPP11
}
// dustmpi.cpp
int get_mpi_rank();
extern "C" SEXP _dustmpi_get_mpi_rank() {
  BEGIN_CPP11
    return cpp11::as_sexp(get_mpi_rank());
  END_CPP11
}
// dustmpi.cpp
void end_mpi();
extern "C" SEXP _dustmpi_end_mpi() {
  BEGIN_CPP11
    end_mpi();
    return R_NilValue;
  END_CPP11
}
// dustmpi.cpp
double get_mpi_wtime();
extern "C" SEXP _dustmpi_get_mpi_wtime() {
  BEGIN_CPP11
    return cpp11::as_sexp(get_mpi_wtime());
  END_CPP11
}
// interface.cpp
cpp11::sexp simulate_model(cpp11::list r_pars, std::vector<double> initial_state, int end_time, int n_particles, cpp11::sexp r_rng_ptr, bool use_mpi);
extern "C" SEXP _dustmpi_simulate_model(SEXP r_pars, SEXP initial_state, SEXP end_time, SEXP n_particles, SEXP r_rng_ptr, SEXP use_mpi) {
  BEGIN_CPP11
    return cpp11::as_sexp(simulate_model(cpp11::as_cpp<cpp11::decay_t<cpp11::list>>(r_pars), cpp11::as_cpp<cpp11::decay_t<std::vector<double>>>(initial_state), cpp11::as_cpp<cpp11::decay_t<int>>(end_time), cpp11::as_cpp<cpp11::decay_t<int>>(n_particles), cpp11::as_cpp<cpp11::decay_t<cpp11::sexp>>(r_rng_ptr), cpp11::as_cpp<cpp11::decay_t<bool>>(use_mpi)));
  END_CPP11
}

extern "C" {
static const R_CallMethodDef CallEntries[] = {
    {"_dustmpi_end_mpi",        (DL_FUNC) &_dustmpi_end_mpi,        0},
    {"_dustmpi_get_mpi_rank",   (DL_FUNC) &_dustmpi_get_mpi_rank,   0},
    {"_dustmpi_get_mpi_size",   (DL_FUNC) &_dustmpi_get_mpi_size,   0},
    {"_dustmpi_get_mpi_wtime",  (DL_FUNC) &_dustmpi_get_mpi_wtime,  0},
    {"_dustmpi_simulate_model", (DL_FUNC) &_dustmpi_simulate_model, 6},
    {"_dustmpi_start_mpi",      (DL_FUNC) &_dustmpi_start_mpi,      0},
    {NULL, NULL, 0}
};
}

extern "C" attribute_visible void R_init_dustmpi(DllInfo* dll){
  R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
  R_useDynamicSymbols(dll, FALSE);
  R_forceSymbols(dll, TRUE);
}
